Chess game to be played on the terminal will be Object Oriented and coded in C++. 

First requirements of the game is for the game to work, without any artifical intelligence. 
Inputs will be given in the terminal similar to that of the professionals, like so: "Hf6" or "PxD5". 

Further relevant information to the project should be added here as well as the overall "gameplan",
i.e. a more extensive plan as to how the program works. 

----------------------------------------------------------------------------------------------------------

main.cpp ~~> creates a board object and takes in continuous functions. *ends maybe when board.cpp returns a 1 or something similar*
board.cpp ~~> board class. 
	board.h ~~> defines the board class. the board class is to have 12 objects and 32 "smart pointers".
pieces.cpp ~~> there are 7 classes declared in this file.
	pieces.h ~~> of the 7 classes, there should be a arbitrary "piece" class defined. the rest of the classes are as follows: Pawn, Rook, Horse(to avoid confusion between King and Knight), Bishop, King, Queen.
		     the 6 specific piece classes should inherit from the arbitrary "piece" class so that the "smart pointer" can be of one type and point to them all.
		     
-----------------------------------------------------------------------------------------------------------

I've decided to make this a diary of a sort of how I'm going about this whole project. The more I think about how I am going to tackle this project, the more I realize how hectic it is and how much that I need a plan. There are a lot of questions I have and being a little weak with Class Inheritance does not help at all. I reopened my C++ Primer Plus book to the class inheritance and will be spending most of my time in this chapter informing myself about all the important things that I might have missed in class inheritance. Some obstacles that I am encoutering besides not having a design plan (which probably should really be done, considering a project such a size and the ideas I have for it), are specific things (which I suppose ties in with the design plan). I come up with many great ideas, I think, that would benefit the program but then I never know how I will impelment it. For instance I, I want to have my array to be an array of pointers, that point to Piece objects, and down to a lower lever which will all be their own different objects that inherited from the Piece object. I'm skeptical about how it will work and I feel that I want to be compiling at least sometime (I haven't compiled at all at this point of writing, which is really bad in my opinion) so that I may see if my program is faulty or not. I don't want to be compiling when I've got huge lines of code expecting them to work out. Back to the design part, I really have trouble connecting it all, because I want my Board object (class) to somehow cross over with the Piece(s) and individual class objects (Pawn, King, Rook, etc..). I almost have this problem of always thinking of new functions that will benefit to the project, or to whatever I'm trying to achieve. Luckily, after reviewing what I had done, I seemed to have it a bit under control. I'm wanting to ask people for tips, on how I should implement this.  
